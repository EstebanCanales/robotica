"""
Generador de prompts para Ollama.
"""
from typing import Dict, Any
import json
import logging

logger = logging.getLogger(__name__)


def generate_prompt(data: Dict[str, Any]) -> str:
    """
    Generar prompt para Ollama basado en los datos de los sensores.
    
    Args:
        data: Diccionario con los datos de los sensores
        
    Returns:
        Prompt generado
    """
    # Asegurarse de que data sea un diccionario
    if isinstance(data, str):
        try:
            data = json.loads(data)
            logger.info("Datos convertidos de string a diccionario")
        except json.JSONDecodeError as e:
            logger.error(f"Error al decodificar datos JSON: {str(e)}")
            raise ValueError("Los datos deben ser un diccionario o un JSON v√°lido")

    # Depuraci√≥n de datos
    logger.info(f"Claves en el objeto data: {list(data.keys())}")
    
    # Verificar que todas las claves necesarias existen
    required_keys = ['gps', 'sensor_bmp390', 'sensor_ltr390', 'clima_satelital']
    missing_keys = [key for key in required_keys if key not in data]
    if missing_keys:
        logger.error(f"Faltan claves requeridas en los datos: {missing_keys}")
        # Usar datos de ejemplo si faltan claves
        logger.info("Usando datos de ejemplo para las claves faltantes")
        # Asegurarse de que existan todas las claves necesarias
        if 'gps' not in data:
            data['gps'] = {'latitud': 9.889, 'longitud': -84.089}
        if 'sensor_bmp390' not in data:
            data['sensor_bmp390'] = {'temperatura_a': 24.2, 'presion_hPa': 885.7}
        if 'sensor_ltr390' not in data:
            data['sensor_ltr390'] = {'lux': 81.3, 'indice_uv': 0.69}
        if 'clima_satelital' not in data:
            data['clima_satelital'] = {
                'T2M': 22.5, 'RH2M': 92.3, 'PRECTOTCORR': 14.7, 'WS10M': 0.99
            }
    
    # Crear un resumen de los datos m√°s importantes para un prompt m√°s conciso
    try:
        data_resumen = {
            "ubicacion": {
                "latitud": data['gps']['latitud'],
                "longitud": data['gps']['longitud']
            },
            "clima": {
                "temperatura": data['sensor_bmp390']['temperatura_a'],
                "presion_hPa": data['sensor_bmp390']['presion_hPa'],
                "luz_lux": data['sensor_ltr390']['lux'],
                "indice_uv": data['sensor_ltr390']['indice_uv']
            },
            "clima_satelital": {
                "temp_media": data['clima_satelital']['T2M'],
                "humedad": data['clima_satelital']['RH2M'],
                "precipitacion": data['clima_satelital']['PRECTOTCORR'],
                "viento": data['clima_satelital']['WS10M']
            }
        }
        logger.info("Resumen de datos creado correctamente")
    except KeyError as e:
        logger.error(f"Error al acceder a una clave en los datos: {str(e)}")
        # Usar un resumen predeterminado
        data_resumen = {
            "ubicacion": {"latitud": 9.889, "longitud": -84.089},
            "clima": {"temperatura": 24.2, "presion_hPa": 885.7, "luz_lux": 81.3, "indice_uv": 0.69},
            "clima_satelital": {"temp_media": 22.5, "humedad": 92.3, "precipitacion": 14.7, "viento": 0.99}
        }
        logger.info("Usando resumen predeterminado debido a un error")
    
    # Convertir los datos resumidos a formato JSON para incluirlos en el prompt
    data_json = json.dumps(data_resumen, indent=2)
    
    prompt = """Eres un experto en agricultura de precisi√≥n, agronom√≠a y ciencias ambientales. Analiza los siguientes datos ambientales y genera un informe agr√≠cola completo y detallado en el formato estructurado que se indica a continuaci√≥n.

### üìç Ubicaci√≥n y Condiciones Generales
- Latitud y longitud exactas (incluye los valores num√©ricos)
- Altitud aproximada (calcula a partir de la presi√≥n atmosf√©rica)
- Temperatura (especifica ¬∞C)
- Humedad relativa (especifica %)
- Radiaci√≥n solar (especifica W/m¬≤ o lux)
- Precipitaci√≥n acumulada (especifica mm)
- Velocidad del viento (especifica m/s)
- √çndice UV y su interpretaci√≥n
- Calidad del aire (si hay datos disponibles)
- Presi√≥n atmosf√©rica (especifica hPa)

### üåæ Cultivos Recomendados
Por cada cultivo viable seg√∫n las condiciones espec√≠ficas, incluye:
- üå± **Nombre del cultivo** (cient√≠fico y com√∫n)
  - Variedades espec√≠ficas recomendadas para esta regi√≥n
  - Temporada ideal de siembra (meses espec√≠ficos)
  - Requisitos edafoclim√°ticos que cumple este ambiente
  - Ciclo de cultivo esperado (d√≠as hasta cosecha)
  - Rendimiento potencial (ton/ha o kg/m¬≤)
  - Consideraciones especiales para esta ubicaci√≥n

### ‚úÖ Consejos de Manejo Agron√≥mico
- Preparaci√≥n del terreno (t√©cnicas espec√≠ficas, profundidad de laboreo)
- Riego:
  * Sistema recomendado (goteo, aspersi√≥n, etc.)
  * Frecuencia (d√≠as)
  * Duraci√≥n (minutos/horas)
  * Cantidad (litros/m¬≤)
- Fertilizaci√≥n:
  * Requerimientos NPK seg√∫n etapa fenol√≥gica
  * Micronutrientes cr√≠ticos para la zona
  * Cronograma de aplicaci√≥n
- Control de plagas y enfermedades:
  * Plagas y enfermedades comunes en esta zona y condiciones
  * Umbrales econ√≥micos de da√±o
  * M√©todos de control integrado
  * Productos biol√≥gicos y qu√≠micos recomendados

### ‚ö†Ô∏è Riesgos Potenciales
- Clima extremo (probabilidad de sequ√≠as, inundaciones, heladas)
- Limitaciones ed√°ficas seg√∫n la zona
- Posibles deficiencias nutricionales seg√∫n el perfil de suelo t√≠pico
- Plagas o enfermedades estacionales con mayor probabilidad
- Riesgos asociados al cambio clim√°tico en esta regi√≥n

### üåø Sostenibilidad y Buenas Pr√°cticas
- T√©cnicas agroecol√≥gicas espec√≠ficas para esta zona
- Manejo del agua:
  * Tecnolog√≠as de conservaci√≥n
  * Captaci√≥n de agua de lluvia
  * Reutilizaci√≥n
- Manejo del suelo:
  * Cultivos de cobertura recomendados
  * T√©cnicas anti-erosi√≥n
  * Incorporaci√≥n de materia org√°nica
- Biodiversidad:
  * Especies beneficiosas a promover
  * Corredores biol√≥gicos
  * Manejo integrado de plagas
- Medidas para mitigar huella de carbono

### üìä Datos Analizados
Incluye un resumen de los datos originales y valores derivados.

Datos para procesar:
"""
    
    # A√±adir los datos resumidos en formato JSON
    prompt += data_json
    
    prompt += """

Tu respuesta debe ser detallada, precisa y directamente aplicable para agricultores y t√©cnicos agr√≠colas. Utiliza valores num√©ricos espec√≠ficos cuando sea posible. Si alg√∫n dato no est√° disponible, ind√≠calo como "No disponible" y haz recomendaciones basadas en la informaci√≥n que s√≠ tienes. Responde en espa√±ol utilizando terminolog√≠a t√©cnica apropiada.
"""
    
    logger.info(f"Prompt generado con √©xito (longitud: {len(prompt)} caracteres)")
    return prompt 